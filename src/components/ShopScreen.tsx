import { User, StorageService, ShopItem } from '@/lib/storage';
import { Button } from '@/components/ui/button';
import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';
import Icon from '@/components/ui/icon';
import { useToast } from '@/hooks/use-toast';
import { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';

interface ShopScreenProps {
  user: User;
  onBack: () => void;
  refreshUser: () => void;
}

const shopItems: ShopItem[] = [
  { id: 'w1', name: '–ü–∏—Å—Ç–æ–ª–µ—Ç Desert Eagle', type: 'weapon', price: 2500, damage: 45, description: '–ú–æ—â–Ω—ã–π –ø–∏—Å—Ç–æ–ª–µ—Ç —Å –≤—ã—Å–æ–∫–∏–º —É—Ä–æ–Ω–æ–º' },
  { id: 'w2', name: '–®—Ç—É—Ä–º–æ–≤–∞—è –≤–∏–Ω—Ç–æ–≤–∫–∞ M4A1', type: 'weapon', price: 5000, damage: 40, description: '–¢–æ—á–Ω–∞—è –≤–∏–Ω—Ç–æ–≤–∫–∞ –¥–ª—è —Å—Ä–µ–¥–Ω–∏—Ö –¥–∏—Å—Ç–∞–Ω—Ü–∏–π' },
  { id: 'w3', name: '–°–Ω–∞–π–ø–µ—Ä—Å–∫–∞—è –≤–∏–Ω—Ç–æ–≤–∫–∞ AWP', type: 'weapon', price: 8000, donatePrice: 150, damage: 100, description: '–£–±–∏–π—Å—Ç–≤–æ —Å –æ–¥–Ω–æ–≥–æ –≤—ã—Å—Ç—Ä–µ–ª–∞' },
  { id: 't1', name: '–õ–µ–≥–∫–∏–π —Ç–∞–Ω–∫ T-34', type: 'tank', price: 15000, description: '–ë—ã—Å—Ç—Ä—ã–π –∏ –º–∞–Ω–µ–≤—Ä–µ–Ω–Ω—ã–π —Ç–∞–Ω–∫' },
  { id: 't2', name: '–¢—è–∂–µ–ª—ã–π —Ç–∞–Ω–∫ KV-2', type: 'tank', price: 25000, donatePrice: 500, description: '–ú–æ—â–Ω–∞—è –±—Ä–æ–Ω—è –∏ –æ—Ä—É–¥–∏–µ' },
  { id: 'v1', name: '–î–∂–∏–ø Willys', type: 'vehicle', price: 5000, description: '–ë—ã—Å—Ç—Ä–∞—è —Ä–∞–∑–≤–µ–¥—ã–≤–∞—Ç–µ–ª—å–Ω–∞—è –º–∞—à–∏–Ω–∞' },
  { id: 'v2', name: '–ë–¢–†-80', type: 'vehicle', price: 12000, description: '–ë—Ä–æ–Ω–µ—Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–µ—Ä –¥–ª—è –æ—Ç—Ä—è–¥–∞' },
];

export default function ShopScreen({ user, onBack, refreshUser }: ShopScreenProps) {
  const { toast } = useToast();

  const handlePurchase = (item: ShopItem, useDonate: boolean = false) => {
    const users = StorageService.getUsers();
    const currentUser = users.find(u => u.id === user.id);
    
    if (!currentUser) return;

    if (useDonate && item.donatePrice) {
      if (currentUser.donateBalance >= item.donatePrice) {
        currentUser.donateBalance -= item.donatePrice;
        StorageService.updateUser(currentUser);
        refreshUser();
        toast({ 
          title: '–ü–æ–∫—É–ø–∫–∞ —É—Å–ø–µ—à–Ω–∞!', 
          description: `${item.name} –ø—Ä–∏–æ–±—Ä–µ—Ç–µ–Ω –∑–∞ ${item.donatePrice} üíé` 
        });
      } else {
        toast({ 
          title: '–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤', 
          description: '–ù–µ —Ö–≤–∞—Ç–∞–µ—Ç –¥–æ–Ω–∞—Ç –±–∞–ª–∞–Ω—Å–∞', 
          variant: 'destructive' 
        });
      }
    } else {
      if (currentUser.balance >= item.price) {
        currentUser.balance -= item.price;
        StorageService.updateUser(currentUser);
        refreshUser();
        toast({ 
          title: '–ü–æ–∫—É–ø–∫–∞ —É—Å–ø–µ—à–Ω–∞!', 
          description: `${item.name} –ø—Ä–∏–æ–±—Ä–µ—Ç–µ–Ω –∑–∞ ${item.price} ‚ÇΩ` 
        });
      } else {
        toast({ 
          title: '–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤', 
          description: '–ù–µ —Ö–≤–∞—Ç–∞–µ—Ç –∏–≥—Ä–æ–≤–æ–π –≤–∞–ª—é—Ç—ã', 
          variant: 'destructive' 
        });
      }
    }
  };

  const renderItems = (type: ShopItem['type']) => {
    const items = shopItems.filter(item => item.type === type);
    
    return items.length === 0 ? (
      <p className="text-center text-muted-foreground py-8">–¢–æ–≤–∞—Ä—ã —Å–∫–æ—Ä–æ –ø–æ—è–≤—è—Ç—Å—è</p>
    ) : (
      <div className="grid md:grid-cols-2 gap-4">
        {items.map(item => (
          <Card key={item.id}>
            <CardHeader>
              <CardTitle className="flex items-center gap-2">
                {type === 'weapon' && <Icon name="Sword" size={24} />}
                {type === 'tank' && 'üöú'}
                {type === 'vehicle' && 'üöô'}
                <span className="text-lg">{item.name}</span>
              </CardTitle>
            </CardHeader>
            <CardContent className="space-y-4">
              <p className="text-sm text-muted-foreground">{item.description}</p>
              
              {item.damage && (
                <div className="flex items-center justify-between p-2 rounded bg-muted">
                  <span className="text-sm">–£—Ä–æ–Ω</span>
                  <span className="font-bold text-destructive">{item.damage}</span>
                </div>
              )}

              <div className="space-y-2">
                <Button 
                  className="w-full" 
                  onClick={() => handlePurchase(item)}
                  disabled={user.balance < item.price}
                >
                  <Icon name="ShoppingCart" className="mr-2" size={16} />
                  –ö—É–ø–∏—Ç—å –∑–∞ {item.price} ‚ÇΩ
                </Button>
                
                {item.donatePrice && (
                  <Button 
                    className="w-full" 
                    variant="secondary"
                    onClick={() => handlePurchase(item, true)}
                    disabled={user.donateBalance < item.donatePrice}
                  >
                    <Icon name="Sparkles" className="mr-2" size={16} />
                    –ö—É–ø–∏—Ç—å –∑–∞ {item.donatePrice} üíé
                  </Button>
                )}
              </div>
            </CardContent>
          </Card>
        ))}
      </div>
    );
  };

  return (
    <div className="min-h-screen p-4 md:p-8">
      <div className="max-w-6xl mx-auto">
        <div className="flex items-center gap-4 mb-8">
          <Button variant="outline" onClick={onBack}>
            <Icon name="ArrowLeft" className="mr-2" size={16} />
            –ù–∞–∑–∞–¥
          </Button>
          <h1 className="text-3xl font-bold pixel-font">–ú–∞–≥–∞–∑–∏–Ω</h1>
        </div>

        <Card className="mb-6">
          <CardContent className="pt-6">
            <div className="flex justify-around">
              <div className="text-center">
                <p className="text-sm text-muted-foreground mb-1">–ë–∞–ª–∞–Ω—Å</p>
                <p className="text-2xl font-bold text-primary">{user.balance} ‚ÇΩ</p>
              </div>
              <div className="text-center">
                <p className="text-sm text-muted-foreground mb-1">–î–æ–Ω–∞—Ç –±–∞–ª–∞–Ω—Å</p>
                <p className="text-2xl font-bold text-accent">{user.donateBalance} üíé</p>
              </div>
            </div>
          </CardContent>
        </Card>

        <Tabs defaultValue="weapon">
          <TabsList className="grid w-full grid-cols-3 mb-6">
            <TabsTrigger value="weapon">
              <Icon name="Sword" className="mr-2" size={16} />
              –û—Ä—É–∂–∏–µ
            </TabsTrigger>
            <TabsTrigger value="tank">
              üöú –¢–∞–Ω–∫–∏
            </TabsTrigger>
            <TabsTrigger value="vehicle">
              üöô –ú–∞—à–∏–Ω—ã
            </TabsTrigger>
          </TabsList>
          
          <TabsContent value="weapon">{renderItems('weapon')}</TabsContent>
          <TabsContent value="tank">{renderItems('tank')}</TabsContent>
          <TabsContent value="vehicle">{renderItems('vehicle')}</TabsContent>
        </Tabs>
      </div>
    </div>
  );
}
